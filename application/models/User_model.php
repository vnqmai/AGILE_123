<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get user by id
     */
    function get_user_by_email($email)
    {
        // return $this->db->get_where('users',array('email'=>$email))->row_array();
        return $this->db->select()
        ->from('users')
        ->where('email',$email) 
        // ->where('del !=',1) 
        // ->or_where('del is null') 
        ->where("(del != 1 OR del is null)")
        // ->order_by('id', 'DESC')
         ->get()
        ->row_array()
                        ;
    }
    function get_user_by_username($username)
    {
        return $this->db->select("u.*")
                        ->from('users u')
                        // ->join('permission p','p.id = u.permissionId','left')
                        ->where('u.username',$username)
                        // ->where('u.del !=',1) 
                        // ->or_where('u.del is null')
                        ->where("(u.del != 1 OR u.del is null)") 
                        ->get()
                        ->row_array()
                        ;
    }
    function get_user($id)
    {
        return $this->db->select('u.*')
        ->from('users u')
        
       
        ->where('u.id',$id)     
        // ->where('u.del !=',1) 
        // ->or_where('u.del is null') 
        ->where("(u.del != 1 OR u.del is null)") 
         ->get()
        ->row_array();
        // return $this->db->get_where('Users',array('id'=>$id))->row_array();
    }
    function get_user_by_store_id($storeId)
    {
        return $this->db->select('u.*,s.name as storeName, p.title as permissionName')
        ->from('users u')
        
        ->join('store s','s.id=u.storeId','left')    
        ->join('permission p','p.id=u.permissionId','left')  
        ->where('u.storeId',$storeId)     
        // ->where('u.del !=',1) 
        // ->or_where('u.del is null') 
        ->where("(u.del != 1 OR u.del is null)") 
         ->get()
        ->result_array();
        // return $this->db->get_where('Users',array('id'=>$id))->row_array();
    }
        
    /*
     * Get all users
     */
    function get_all_users()
    {

        $this->db->order_by('id', 'desc');
        return $this->db->select('u.*')
        ->from('users u')
        // ->where('u.del !=',1) 
        // ->or_where('u.del is null')     
        ->where("(u.del != 1 OR u.del is null)") 
         ->get()
        ->result_array()
                        ;
        // $this->db->order_by('id', 'desc');
        // return $this->db->get('Users')->result_array();
    }
        
    /*
     * function to add new user
     */
    function add_user($params)
    {
        $this->db->insert('users',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update user
     */
    function update_user($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('users',$params);
    }
    
    /*
     * function to delete user
     */
    function delete_user($id)
    {
        return $this->db->delete('users',array('id'=>$id));
    }
}
